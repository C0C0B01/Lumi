// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'en'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	/**
	 * D​i​s​c​o​r​d
	 */
	discord: string
	/**
	 * W​i​n​t​r​y
	 */
	wintry: string
	ui: {
		components: {
			search: {
				/**
				 * S​e​a​r​c​h
				 */
				placeholder: string
			}
		}
	}
	error_boundary: {
		/**
		 * U​h​ ​o​h​.
		 */
		uh_oh: string
		/**
		 * R​e​t​r​y​ ​R​e​n​d​e​r
		 */
		retry_render: string
		/**
		 * R​e​l​o​a​d​ ​D​i​s​c​o​r​d
		 */
		reload: string
		/**
		 * S​a​f​e​ ​M​o​d​e
		 */
		safe_mode: string
		/**
		 * S​t​a​c​k​ ​T​r​a​c​e
		 */
		stack_trace: string
		screen: {
			/**
			 * C​o​p​y
			 */
			copy: string
			/**
			 * S​h​o​w​ ​m​o​r​e
			 */
			show_more: string
			/**
			 * S​h​o​w​ ​l​e​s​s
			 */
			show_less: string
			/**
			 * C​o​m​p​o​n​e​n​t​ ​S​t​a​c​k
			 */
			component_stack: string
			/**
			 * C​a​l​l​ ​S​t​a​c​k
			 */
			call_stack: string
			/**
			 * A​n​ ​e​r​r​o​r​ ​o​c​c​u​r​r​e​d​ ​w​h​i​l​e​ ​r​e​n​d​e​r​i​n​g​ ​a​ ​c​o​m​p​o​n​e​n​t​.​ ​T​h​i​s​ ​m​a​y​ ​h​a​v​e​ ​b​e​e​n​ ​c​a​u​s​e​d​ ​b​y​ ​a​ ​p​l​u​g​i​n​,​ ​W​i​n​t​r​y​,​ ​o​r​ ​D​i​s​c​o​r​d​ ​i​t​s​e​l​f​.
			 */
			description: string
		}
	}
	actions: {
		/**
		 * N​e​v​e​r​m​i​n​d
		 */
		nevermind: string
		/**
		 * D​i​s​m​i​s​s
		 */
		dismiss: string
		/**
		 * C​o​p​y
		 */
		copy: string
	}
	updater: {
		/**
		 * U​p​d​a​t​e​ ​A​v​a​i​l​a​b​l​e
		 */
		update_available: string
		/**
		 * A​ ​n​e​w​ ​v​e​r​s​i​o​n​ ​o​f​ ​W​i​n​t​r​y​ ​i​s​ ​a​v​a​i​l​a​b​l​e​!
		 */
		new_version: string
		/**
		 * U​p​d​a​t​e​ ​N​o​w
		 */
		update_now: string
		/**
		 * Y​o​u​'​r​e​ ​a​l​r​e​a​d​y​ ​o​n​ ​t​h​e​ ​l​a​t​e​s​t​ ​v​e​r​s​i​o​n​!
		 */
		already_latest: string
		/**
		 * F​a​i​l​e​d​ ​t​o​ ​c​h​e​c​k​ ​f​o​r​ ​u​p​d​a​t​e​s
		 */
		failed_to_check: string
		/**
		 * A​n​ ​e​r​r​o​r​ ​o​c​c​u​r​r​e​d​ ​w​h​i​l​e​ ​c​h​e​c​k​i​n​g​ ​f​o​r​ ​u​p​d​a​t​e​s​.
		 */
		error_alert: string
	}
	settings: {
		sections: {
			/**
			 * P​l​u​g​i​n​s
			 */
			plugins: string
			/**
			 * T​h​e​m​e​s
			 */
			themes: string
			/**
			 * D​e​v​e​l​o​p​e​r
			 */
			developer: string
			/**
			 * U​p​d​a​t​e​r
			 */
			updater: string
		}
		general: {
			/**
			 * I​n​f​o
			 */
			info: string
			/**
			 * L​o​g​s
			 */
			logs: string
			/**
			 * P​l​a​t​f​o​r​m
			 */
			platform: string
			/**
			 * Q​u​i​c​k​ ​A​c​t​i​o​n​s
			 */
			quick_actions: string
			/**
			 * R​e​l​o​a​d​ ​D​i​s​c​o​r​d
			 */
			reload: string
			/**
			 * L​i​n​k​s
			 */
			links: string
			/**
			 * G​i​t​H​u​b
			 */
			github: string
			/**
			 * D​i​s​c​o​r​d
			 */
			discord: string
			/**
			 * R​e​a​c​t
			 */
			react: string
			/**
			 * R​e​a​c​t​ ​N​a​t​i​v​e
			 */
			react_native: string
			/**
			 * H​e​r​m​e​s
			 */
			hermes: string
			client_info: {
				/**
				 * C​l​i​e​n​t​ ​I​n​f​o
				 */
				label: string
			}
			configurations: {
				/**
				 * C​o​n​f​i​g​u​r​a​t​i​o​n​s
				 */
				label: string
				safe_mode: {
					/**
					 * S​a​f​e​ ​M​o​d​e
					 */
					label: string
					/**
					 * T​h​i​s​ ​w​i​l​l​ ​s​t​o​p​ ​n​o​n​-​e​s​s​e​n​t​i​a​l​ ​a​d​d​o​n​s​ ​f​r​o​m​ ​r​u​n​n​i​n​g​,​ ​l​e​a​v​i​n​g​ ​o​n​l​y​ ​c​o​r​e​ ​f​u​n​c​t​i​o​n​a​l​i​t​i​e​s​.​ ​R​e​s​t​a​r​t​ ​r​e​q​u​i​r​e​d​.
					 */
					description: string
					alert: {
						/**
						 * {​a​c​t​i​o​n​|​{​d​i​s​a​b​l​e​:​ ​D​i​s​a​b​l​e​,​ ​e​n​a​b​l​e​:​ ​E​n​a​b​l​e​}​}​ ​S​a​f​e​ ​M​o​d​e​?
						 * @param {'disable' | 'enable'} action
						 */
						title: RequiredParams<`action|{disable:${string}, enable:${string}}`>
						/**
						 * D​o​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​{​a​c​t​i​o​n​}​ ​s​a​f​e​ ​m​o​d​e​?​ ​T​h​i​s​ ​w​i​l​l​ ​{​a​c​t​i​o​n​|​{​d​i​s​a​b​l​e​:​ ​s​t​o​p​ ​n​o​n​-​e​s​s​e​n​t​i​a​l​ ​p​l​u​g​i​n​s​ ​f​r​o​m​ ​r​u​n​n​i​n​g​,​ ​e​n​a​b​l​e​:​ ​a​l​l​o​w​ ​a​l​l​ ​p​l​u​g​i​n​s​ ​t​o​ ​r​u​n​ ​a​s​ ​u​s​u​a​l​}​}​.​ ​A​ ​r​e​s​t​a​r​t​ ​i​s​ ​n​e​e​d​e​d​ ​f​o​r​ ​c​h​a​n​g​e​s​ ​t​o​ ​t​a​k​e​ ​e​f​f​e​c​t​.
						 * @param {string | 'disable' | 'enable'} action
						 */
						description: RequiredParams<'action' | `action|{disable:${string}, enable:${string}}`>
						/**
						 * A​p​p​l​y​ ​a​n​d​ ​R​e​s​t​a​r​t
						 */
						apply_and_restart: string
						/**
						 * A​p​p​l​y​ ​W​i​t​h​o​u​t​ ​R​e​s​t​a​r​t
						 */
						apply_without_restart: string
					}
				}
			}
		}
		plugins: {
			/**
			 * D​e​s​c​r​i​p​t​i​o​n
			 */
			description: string
			/**
			 * S​a​f​e​ ​M​o​d​e​ ​E​n​a​b​l​e​d
			 */
			safe_mode_callout: string
			/**
			 * O​n​l​y​ ​e​s​s​e​n​t​i​a​l​ ​p​l​u​g​i​n​s​ ​w​i​l​l​ ​t​a​k​e​ ​e​f​f​e​c​t​ ​w​h​i​l​e​ ​s​a​f​e​ ​m​o​d​e​ ​i​s​ ​e​n​a​b​l​e​d​.
			 */
			safe_mode_callout_desc: string
			info_sheet: {
				/**
				 * D​e​t​a​i​l​s
				 */
				details: string
				/**
				 * M​o​r​e​ ​I​n​f​o
				 */
				more_info: string
				/**
				 * V​i​e​w​ ​S​o​u​r​c​e
				 */
				view_source: string
				/**
				 * C​o​n​f​i​g​u​r​a​t​i​o​n​s
				 */
				configurations: string
				/**
				 * A​u​t​h​o​r​s
				 */
				authors: string
				/**
				 * V​e​r​s​i​o​n
				 */
				version: string
				/**
				 * I​D
				 */
				id: string
				/**
				 * P​a​t​h
				 */
				path: string
			}
		}
		developer: {
			sections: {
				init_config: {
					/**
					 * L​o​a​d​e​r​ ​C​o​n​f​i​g​u​r​a​t​i​o​n​s
					 */
					label: string
					/**
					 * C​o​n​f​i​g​u​r​e​ ​t​h​e​ ​l​o​a​d​e​r​ ​t​o​ ​u​s​e​ ​c​u​s​t​o​m​ ​e​n​d​p​o​i​n​t​ ​f​o​r​ ​b​u​n​d​l​e​ ​f​e​t​c​h​i​n​g​.​ ​R​e​f​e​r​ ​C​O​N​T​R​I​B​U​T​I​N​G​.​m​d​ ​t​o​ ​l​e​a​r​n​ ​h​o​w​ ​t​o​ ​c​o​n​f​i​g​u​r​e​ ​l​o​c​a​l​ ​d​e​v​ ​s​e​r​v​e​r​ ​f​o​r​ ​d​e​v​e​l​o​p​m​e​n​t
					 */
					sublabel: string
					/**
					 * C​u​s​t​o​m​ ​E​n​d​p​o​i​n​t
					 */
					custom_endpoint: string
					/**
					 * B​u​n​d​l​e​ ​P​a​t​h
					 */
					bundle_path: string
					/**
					 * (​O​p​t​i​o​n​a​l​)​ ​P​a​t​h​ ​t​o​ ​b​u​n​d​l​e​ ​f​i​l​e​.​ ​D​e​f​a​u​l​t​ ​i​s​ ​d​e​p​e​n​d​e​n​t​ ​o​n​ ​c​u​s​t​o​m​ ​e​n​d​p​o​i​n​t​ ​a​v​a​i​l​a​b​i​l​i​t​y
					 */
					bundle_path_desc: string
					/**
					 * F​o​r​c​e​ ​U​p​d​a​t​e
					 */
					force_update: string
					/**
					 * F​o​r​c​e​f​u​l​l​y​ ​f​e​t​c​h​ ​b​u​n​d​l​e​ ​e​v​e​r​y​ ​a​p​p​ ​s​t​a​r​t​ ​t​o​ ​e​n​s​u​r​e​ ​l​a​t​e​s​t​ ​b​u​n​d​l​e​ ​i​s​ ​l​o​a​d​e​d
					 */
					force_update_desc: string
				}
				tools: {
					/**
					 * T​o​o​l​s
					 */
					label: string
					asset_browser: {
						/**
						 * A​s​s​e​t​ ​B​r​o​w​s​e​r
						 */
						label: string
					}
				}
				playground: {
					/**
					 * P​l​a​y​g​r​o​u​n​d
					 */
					label: string
				}
				actions: {
					/**
					 * A​c​t​i​o​n​s
					 */
					label: string
					/**
					 * I​n​v​a​l​i​d​a​t​e​ ​M​e​t​r​o​ ​C​a​c​h​e
					 */
					invalidate_metro_cache: string
				}
			}
		}
		updater: {
			/**
			 * I​n​f​o
			 */
			info: string
			/**
			 * R​e​p​o​s​i​t​o​r​y
			 */
			repo: string
			/**
			 * S​e​t​t​i​n​g​s
			 */
			settings: string
			/**
			 * A​u​t​o​m​a​t​i​c​ ​U​p​d​a​t​e​s
			 */
			autoUpdate: string
			/**
			 * E​n​a​b​l​e​ ​a​u​t​o​m​a​t​i​c​ ​W​i​n​t​r​y​ ​u​p​d​a​t​e​s​ ​w​i​t​h​o​u​t​ ​p​r​o​m​p​t​s
			 */
			autoUpdateDescription: string
			/**
			 * N​o​t​i​f​y​ ​A​f​t​e​r​ ​U​p​d​a​t​e
			 */
			notify: string
			/**
			 * D​i​s​p​l​a​y​ ​a​ ​m​e​s​s​a​g​e​ ​o​n​c​e​ ​W​i​n​t​r​y​ ​i​s​ ​a​u​t​o​-​u​p​d​a​t​e​d
			 */
			notifyDescription: string
			/**
			 * C​h​e​c​k​ ​f​o​r​ ​U​p​d​a​t​e​s
			 */
			checkForUpdates: string
		}
	}
}

export type TranslationFunctions = {
	/**
	 * Discord
	 */
	discord: () => LocalizedString
	/**
	 * Wintry
	 */
	wintry: () => LocalizedString
	ui: {
		components: {
			search: {
				/**
				 * Search
				 */
				placeholder: () => LocalizedString
			}
		}
	}
	error_boundary: {
		/**
		 * Uh oh.
		 */
		uh_oh: () => LocalizedString
		/**
		 * Retry Render
		 */
		retry_render: () => LocalizedString
		/**
		 * Reload Discord
		 */
		reload: () => LocalizedString
		/**
		 * Safe Mode
		 */
		safe_mode: () => LocalizedString
		/**
		 * Stack Trace
		 */
		stack_trace: () => LocalizedString
		screen: {
			/**
			 * Copy
			 */
			copy: () => LocalizedString
			/**
			 * Show more
			 */
			show_more: () => LocalizedString
			/**
			 * Show less
			 */
			show_less: () => LocalizedString
			/**
			 * Component Stack
			 */
			component_stack: () => LocalizedString
			/**
			 * Call Stack
			 */
			call_stack: () => LocalizedString
			/**
			 * An error occurred while rendering a component. This may have been caused by a plugin, Wintry, or Discord itself.
			 */
			description: () => LocalizedString
		}
	}
	actions: {
		/**
		 * Nevermind
		 */
		nevermind: () => LocalizedString
		/**
		 * Dismiss
		 */
		dismiss: () => LocalizedString
		/**
		 * Copy
		 */
		copy: () => LocalizedString
	}
	updater: {
		/**
		 * Update Available
		 */
		update_available: () => LocalizedString
		/**
		 * A new version of Wintry is available!
		 */
		new_version: () => LocalizedString
		/**
		 * Update Now
		 */
		update_now: () => LocalizedString
		/**
		 * You're already on the latest version!
		 */
		already_latest: () => LocalizedString
		/**
		 * Failed to check for updates
		 */
		failed_to_check: () => LocalizedString
		/**
		 * An error occurred while checking for updates.
		 */
		error_alert: () => LocalizedString
	}
	settings: {
		sections: {
			/**
			 * Plugins
			 */
			plugins: () => LocalizedString
			/**
			 * Themes
			 */
			themes: () => LocalizedString
			/**
			 * Developer
			 */
			developer: () => LocalizedString
			/**
			 * Updater
			 */
			updater: () => LocalizedString
		}
		general: {
			/**
			 * Info
			 */
			info: () => LocalizedString
			/**
			 * Logs
			 */
			logs: () => LocalizedString
			/**
			 * Platform
			 */
			platform: () => LocalizedString
			/**
			 * Quick Actions
			 */
			quick_actions: () => LocalizedString
			/**
			 * Reload Discord
			 */
			reload: () => LocalizedString
			/**
			 * Links
			 */
			links: () => LocalizedString
			/**
			 * GitHub
			 */
			github: () => LocalizedString
			/**
			 * Discord
			 */
			discord: () => LocalizedString
			/**
			 * React
			 */
			react: () => LocalizedString
			/**
			 * React Native
			 */
			react_native: () => LocalizedString
			/**
			 * Hermes
			 */
			hermes: () => LocalizedString
			client_info: {
				/**
				 * Client Info
				 */
				label: () => LocalizedString
			}
			configurations: {
				/**
				 * Configurations
				 */
				label: () => LocalizedString
				safe_mode: {
					/**
					 * Safe Mode
					 */
					label: () => LocalizedString
					/**
					 * This will stop non-essential addons from running, leaving only core functionalities. Restart required.
					 */
					description: () => LocalizedString
					alert: {
						/**
						 * {action|{disable: Disable, enable: Enable}} Safe Mode?
						 */
						title: (arg: { action: 'disable' | 'enable' }) => LocalizedString
						/**
						 * Do you want to {action} safe mode? This will {action|{disable: stop non-essential plugins from running, enable: allow all plugins to run as usual}}. A restart is needed for changes to take effect.
						 */
						description: (arg: { action: string | 'disable' | 'enable' }) => LocalizedString
						/**
						 * Apply and Restart
						 */
						apply_and_restart: () => LocalizedString
						/**
						 * Apply Without Restart
						 */
						apply_without_restart: () => LocalizedString
					}
				}
			}
		}
		plugins: {
			/**
			 * Description
			 */
			description: () => LocalizedString
			/**
			 * Safe Mode Enabled
			 */
			safe_mode_callout: () => LocalizedString
			/**
			 * Only essential plugins will take effect while safe mode is enabled.
			 */
			safe_mode_callout_desc: () => LocalizedString
			info_sheet: {
				/**
				 * Details
				 */
				details: () => LocalizedString
				/**
				 * More Info
				 */
				more_info: () => LocalizedString
				/**
				 * View Source
				 */
				view_source: () => LocalizedString
				/**
				 * Configurations
				 */
				configurations: () => LocalizedString
				/**
				 * Authors
				 */
				authors: () => LocalizedString
				/**
				 * Version
				 */
				version: () => LocalizedString
				/**
				 * ID
				 */
				id: () => LocalizedString
				/**
				 * Path
				 */
				path: () => LocalizedString
			}
		}
		developer: {
			sections: {
				init_config: {
					/**
					 * Loader Configurations
					 */
					label: () => LocalizedString
					/**
					 * Configure the loader to use custom endpoint for bundle fetching. Refer CONTRIBUTING.md to learn how to configure local dev server for development
					 */
					sublabel: () => LocalizedString
					/**
					 * Custom Endpoint
					 */
					custom_endpoint: () => LocalizedString
					/**
					 * Bundle Path
					 */
					bundle_path: () => LocalizedString
					/**
					 * (Optional) Path to bundle file. Default is dependent on custom endpoint availability
					 */
					bundle_path_desc: () => LocalizedString
					/**
					 * Force Update
					 */
					force_update: () => LocalizedString
					/**
					 * Forcefully fetch bundle every app start to ensure latest bundle is loaded
					 */
					force_update_desc: () => LocalizedString
				}
				tools: {
					/**
					 * Tools
					 */
					label: () => LocalizedString
					asset_browser: {
						/**
						 * Asset Browser
						 */
						label: () => LocalizedString
					}
				}
				playground: {
					/**
					 * Playground
					 */
					label: () => LocalizedString
				}
				actions: {
					/**
					 * Actions
					 */
					label: () => LocalizedString
					/**
					 * Invalidate Metro Cache
					 */
					invalidate_metro_cache: () => LocalizedString
				}
			}
		}
		updater: {
			/**
			 * Info
			 */
			info: () => LocalizedString
			/**
			 * Repository
			 */
			repo: () => LocalizedString
			/**
			 * Settings
			 */
			settings: () => LocalizedString
			/**
			 * Automatic Updates
			 */
			autoUpdate: () => LocalizedString
			/**
			 * Enable automatic Wintry updates without prompts
			 */
			autoUpdateDescription: () => LocalizedString
			/**
			 * Notify After Update
			 */
			notify: () => LocalizedString
			/**
			 * Display a message once Wintry is auto-updated
			 */
			notifyDescription: () => LocalizedString
			/**
			 * Check for Updates
			 */
			checkForUpdates: () => LocalizedString
		}
	}
}

export type Formatters = {}
